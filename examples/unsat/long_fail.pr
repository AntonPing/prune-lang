datatype IntList where
| Cons(Int, IntList)
| Nil
end

function length(xs: IntList) -> Int
begin
    match xs with
    | Cons(head, tail) => @iadd(length(tail), 1)
    | Nil => 0
    end
end


predicate p1(x: Int, xs: IntList)
begin
    and(
        @icmpgt(x, 42) = true,
        length(xs) = 100,
    )
end

predicate p2(x: Int, xs: IntList)
begin
    and(
        length(xs) = 100,
        @icmplt(x, 42) = true,
    )
end

predicate long_fail(x: Int, xs: IntList, ys: IntList)
begin
	and(
		p1(x, xs),
        p2(x, ys),
	)
end

entry long_fail(10, 51, 1)